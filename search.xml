<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2023/06/17/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>vue3动态路由</title>
    <url>/2023/06/18/vue3%E5%8A%A8%E6%80%81%E8%B7%AF%E7%94%B1/</url>
    <content><![CDATA[<h1 id="1-为什么使用动态路由"><a href="#1-为什么使用动态路由" class="headerlink" title="1.为什么使用动态路由"></a>1.为什么使用动态路由</h1><p>写动态路由是为了配合权限使用，传统的静态路由虽然也可以做到根据权限的不同给用户展示不同的界面，但是要写大量的逻辑语句，太过于繁琐，随着身份的增多，判断的逻辑也越来越复杂，代码的复用性差。动态路由做到了根据权限的不同，向后端请求的数据也发生改变，前端避免了繁琐的逻辑，只专注于页面的设计，让前后端分工明确。</p>
<h1 id="2-分析思路："><a href="#2-分析思路：" class="headerlink" title="2.分析思路："></a>2.分析思路：</h1><p>动态路由的本质其实是后端在接收到前端登录请求时，根据请求负载数据的不同给前端返回不同的数据，前端解析后端发送来的数据后把他们解析成路由的格式，利用 vue-router 中的 addRoute 方法将他们添加到路由中去,从而实现不同的权限，不同的页面。动态路由的实现就牵扯到以下几个问题<br>1：addRoute方法的使用<br>2：在刷新界面时如何保证动态路由不会丢失</p>
<h1 id="3-问题解决"><a href="#3-问题解决" class="headerlink" title="3.问题解决"></a>3.问题解决</h1>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>--路由</tag>
      </tags>
  </entry>
  <entry>
    <title>第一篇文章</title>
    <url>/2023/06/18/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/</url>
    <content><![CDATA[<p>记录生活，同时也记录学习的过程</p>
]]></content>
      <categories>
        <category>杂记</category>
      </categories>
      <tags>
        <tag>--导航</tag>
      </tags>
  </entry>
</search>
